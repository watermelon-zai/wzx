<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wzx.springbootblog.mapper.ArticleInfoMapper" >
  <resultMap id="BaseResultMap" type="com.wzx.springbootblog.domain.ArticleInfo" >
    <id column="article_id" property="articleId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="article_title" property="articleTitle" jdbcType="VARCHAR" />
    <result column="article_content" property="articleContent" jdbcType="VARCHAR" />
    <result column="article_img" property="articleImg" jdbcType="VARCHAR" />
    <result column="article_recom" property="articleRecom" jdbcType="VARCHAR" />
    <result column="article_time" property="articleTime" jdbcType="TIMESTAMP" />
    <result column="article_mark" property="articleMark" jdbcType="VARCHAR" />
    <result column="category_Name" property="categoryName" />
    <result column="category_alias" property="categoryAlias" />
    <result column="user_name" property="userName" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    article_id, user_id, category_id, article_title, article_content, article_img, article_recom, 
    article_time, article_mark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wzx.springbootblog.domain.ArticleInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from article_info
    where article_id = #{articleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article_info
    where article_id = #{articleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wzx.springbootblog.domain.ArticleInfoExample" >
    delete from article_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wzx.springbootblog.domain.ArticleInfo" >
    insert into article_info (article_id, user_id, category_id, 
      article_title, article_content, article_img, 
      article_recom, article_time, article_mark
      )
    values (#{articleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, 
      #{articleTitle,jdbcType=VARCHAR}, #{articleContent,jdbcType=VARCHAR}, #{articleImg,jdbcType=VARCHAR}, 
      #{articleRecom,jdbcType=VARCHAR}, #{articleTime,jdbcType=TIMESTAMP}, #{articleMark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wzx.springbootblog.domain.ArticleInfo" >
    insert into article_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="articleTitle != null" >
        article_title,
      </if>
      <if test="articleContent != null" >
        article_content,
      </if>
      <if test="articleImg != null" >
        article_img,
      </if>
      <if test="articleRecom != null" >
        article_recom,
      </if>
      <if test="articleTime != null" >
        article_time,
      </if>
      <if test="articleMark != null" >
        article_mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null" >
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null" >
        #{articleContent,jdbcType=VARCHAR},
      </if>
      <if test="articleImg != null" >
        #{articleImg,jdbcType=VARCHAR},
      </if>
      <if test="articleRecom != null" >
        #{articleRecom,jdbcType=VARCHAR},
      </if>
      <if test="articleTime != null" >
        #{articleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleMark != null" >
        #{articleMark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wzx.springbootblog.domain.ArticleInfoExample" resultType="java.lang.Integer" >
    select count(*) from article_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update article_info
    <set >
      <if test="record.articleId != null" >
        article_id = #{record.articleId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.articleTitle != null" >
        article_title = #{record.articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.articleContent != null" >
        article_content = #{record.articleContent,jdbcType=VARCHAR},
      </if>
      <if test="record.articleImg != null" >
        article_img = #{record.articleImg,jdbcType=VARCHAR},
      </if>
      <if test="record.articleRecom != null" >
        article_recom = #{record.articleRecom,jdbcType=VARCHAR},
      </if>
      <if test="record.articleTime != null" >
        article_time = #{record.articleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.articleMark != null" >
        article_mark = #{record.articleMark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update article_info
    set article_id = #{record.articleId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      article_title = #{record.articleTitle,jdbcType=VARCHAR},
      article_content = #{record.articleContent,jdbcType=VARCHAR},
      article_img = #{record.articleImg,jdbcType=VARCHAR},
      article_recom = #{record.articleRecom,jdbcType=VARCHAR},
      article_time = #{record.articleTime,jdbcType=TIMESTAMP},
      article_mark = #{record.articleMark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wzx.springbootblog.domain.ArticleInfo" >
    update article_info
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null" >
        article_title = #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null" >
        article_content = #{articleContent,jdbcType=VARCHAR},
      </if>
      <if test="articleImg != null" >
        article_img = #{articleImg,jdbcType=VARCHAR},
      </if>
      <if test="articleRecom != null" >
        article_recom = #{articleRecom,jdbcType=VARCHAR},
      </if>
      <if test="articleTime != null" >
        article_time = #{articleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleMark != null" >
        article_mark = #{articleMark,jdbcType=VARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wzx.springbootblog.domain.ArticleInfo" >
    update article_info
    set user_id = #{userId,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=INTEGER},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      article_content = #{articleContent,jdbcType=VARCHAR},
      article_img = #{articleImg,jdbcType=VARCHAR},
      article_recom = #{articleRecom,jdbcType=VARCHAR},
      article_time = #{articleTime,jdbcType=TIMESTAMP},
      article_mark = #{articleMark,jdbcType=VARCHAR}
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>

  <select id="findAllArticlePageList" resultMap="BaseResultMap">
 SELECT n.*,
       u.user_name
FROM
(SELECT
      a.*,
      c.category_name,
      c.category_alias
    FROM article_info a
    LEFT JOIN category_info c
    ON a.category_id = c.category_id


    ) n
LEFT JOIN user_info u
on u.user_id= n.user_id ORDER BY article_time DESC
  </select>

  <select id="findAllArticlePageListByCondition" resultMap="BaseResultMap">
  <bind name="_articleTitle" value="'%'+articleTitle+'%'"/>
    SELECT n.*,
    u.user_name
    FROM
    (SELECT
    a.*,
    c.category_name,
    c.category_alias
    FROM article_info a
    inner JOIN category_info c
    ON a.category_id = c.category_id
    and a.article_title like #{_articleTitle}) n
    LEFT JOIN user_info u
    on u.user_id= n.user_id ORDER BY article_time DESC
  </select>

  <select id="findPersonalArticleByCondition" resultMap="BaseResultMap">
  SELECT
    a.*,
    c.category_name,
    c.category_alias
    FROM article_info a
    inner JOIN category_info c
    ON a.category_id = c.category_id
    <if test="userId != null" >
      and a.user_id = #{userId}
    </if>
    <if test="articleTitle != null" >
      <bind name="_articleTitle" value="'%'+articleTitle+'%'"/>
      and a.article_title like #{_articleTitle}
    </if>

  </select>



  <select id="findNewArticle" resultMap="BaseResultMap">
  SELECT n.*,
       u.user_name
FROM
(   SELECT
    a.*,
    c.category_name,
    c.category_alias
    FROM article_info a
    inner JOIN category_info c
    ON a.category_id = c.category_id
    and a.article_mark = '1'
    order by a.article_time desc
    limit 0 ,6) n
LEFT JOIN user_info u
on u.user_id= n.user_id
  </select>

  <select id="findArticleRecomList" resultMap="BaseResultMap">
    SELECT n.*,
       u.user_name
FROM
(    SELECT
    a.*,
    c.category_name,
    c.category_alias
    FROM article_info a
    inner JOIN category_info c
    ON a.category_id = c.category_id
    and a.article_recom = '1'
    order by a.article_time desc
    limit 0 ,5) n
LEFT JOIN user_info u
on u.user_id= n.user_id
  </select>

  <select id="findOneArticleById" resultMap="BaseResultMap">
 SELECT n.*,
       u.user_name
FROM
( SELECT
    a.*,
    c.category_name,
    c.category_alias
    FROM article_info a
    inner JOIN category_info c
    ON a.category_id = c.category_id
    AND a.article_id = #{id}) n
LEFT JOIN user_info u
on u.user_id= n.user_id
  </select>

  <select id="findArticleByCateId" resultMap="BaseResultMap">
 SELECT n.*,
       u.user_name
FROM
( SELECT
    a.*,
    c.category_name,
    c.category_alias
    FROM article_info a
    inner JOIN category_info c
    ON a.category_id = c.category_id
    AND a.category_id=#{id}) n
LEFT JOIN user_info u
on u.user_id= n.user_id
  </select>

  <select id="findArticleRecomListByCateId" resultMap="BaseResultMap">
        SELECT n.*,
       u.user_name
FROM
(SELECT
    a.*,
    c.category_name,
    c.category_alias
    FROM article_info a
    inner JOIN category_info c
    ON a.category_id = c.category_id
    and a.article_recom = '1'
    and a.category_id = #{id}
    order by a.article_time desc
    limit 0 ,5) n
LEFT JOIN user_info u
on u.user_id= n.user_id
  </select>

  <select id="searchArticle" resultMap="BaseResultMap">
    <bind name="_articleTitle" value="'%'+name+'%'"/>
    SELECT n.*,
    u.user_name
    FROM
    (SELECT
    a.*,
    c.category_name,
    c.category_alias
    FROM article_info a
    inner JOIN category_info c
    ON a.category_id = c.category_id
    and a.article_title LIKE #{_articleTitle}
    ) n
    LEFT JOIN user_info u
    on u.user_id= n.user_id
  </select>

  <insert id="collectArticles">
    INSERT INTO collections (user_id,article_id) VALUES(#{userId},#{articleId})
  </insert>

  <select id="findUserCollections" resultType="java.lang.Integer">
    select count(*) from collections where user_id = #{userId} and article_id = #{id}
  </select>

  <delete id="cancelCollection">
    DELETE FROM collections where user_id = #{userId} and article_id = #{id}
  </delete>

  <select id="findAllMyCollectionsArticlePageListByUserId" resultMap="BaseResultMap">
    SELECT d.* FROM

(SELECT n.*,
       u.user_name
FROM
(SELECT
      a.*,
      c.category_name,
      c.category_alias
    FROM article_info a
    LEFT JOIN category_info c
    ON a.category_id = c.category_id


    ) n
LEFT JOIN user_info u
on u.user_id= n.user_id)
d INNER JOIN (SELECT article_id FROM collections WHERE user_id=#{userId}) b where d.article_id = b.article_id
  </select>
</mapper>